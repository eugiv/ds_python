--=============== МОДУЛЬ 3. ОСНОВЫ SQL =======================================
--= ПОМНИТЕ, ЧТО НЕОБХОДИМО УСТАНОВИТЬ ВЕРНОЕ СОЕДИНЕНИЕ И ВЫБРАТЬ СХЕМУ PUBLIC===========
SET search_path TO public;

--======== ОСНОВНАЯ ЧАСТЬ ==============

--ЗАДАНИЕ №1
--Выведите для каждого покупателя его адрес проживания, 
--город и страну проживания.

SELECT CONCAT_WS(' ', c.last_name, c.first_name), a.address, ct.city, cn.country
FROM customer AS c
JOIN address AS a ON a.address_id = c.address_id
JOIN city AS ct ON ct.city_id = a.city_id
JOIN country AS cn ON cn.country_id = ct.country_id;


--ЗАДАНИЕ №2
--С помощью SQL-запроса посчитайте для каждого магазина количество его покупателей.

SELECT s.store_id AS "ID магазина", COUNT(c.store_id) AS "Количество покупателей"
FROM store AS s
JOIN customer AS c ON c.store_id = s.store_id
GROUP BY s.store_id;


--Доработайте запрос и выведите только те магазины, 
--у которых количество покупателей больше 300-от.
--Для решения используйте фильтрацию по сгруппированным строкам 
--с использованием функции агрегации.

SELECT s.store_id AS "ID магазина", COUNT(c.customer_id) AS "Количество покупателей"
FROM store AS s
JOIN customer AS c ON c.store_id = s.store_id
GROUP BY s.store_id
HAVING COUNT(c.customer_id) > 300;


-- Доработайте запрос, добавив в него информацию о городе магазина, 
--а также фамилию и имя продавца, который работает в этом магазине.

SELECT st_cnt."ID магазина", st_cnt."Количество покупателей", ct.city AS "Город",
       CONCAT_WS(' ', st.last_name, st.first_name) AS "Имя сотрудника"
FROM city AS ct
    JOIN address AS a ON ct.city_id = a.city_id
    JOIN
        (SELECT s.store_id AS "ID магазина", s.address_id, COUNT(c.customer_id) AS "Количество покупателей", s.manager_staff_id
        FROM store AS s
        JOIN customer AS c ON c.store_id = s.store_id
        GROUP BY s.store_id
        HAVING COUNT(c.customer_id) > 300) AS st_cnt ON st_cnt.address_id = a.address_id
    JOIN staff AS st ON st.staff_id = st_cnt.manager_staff_id


--ЗАДАНИЕ №3
--Выведите ТОП-5 покупателей, 
--которые взяли в аренду за всё время наибольшее количество фильмов





--ЗАДАНИЕ №4
--Посчитайте для каждого покупателя 4 аналитических показателя:
--  1. количество фильмов, которые он взял в аренду
--  2. общую стоимость платежей за аренду всех фильмов (значение округлите до целого числа)
--  3. минимальное значение платежа за аренду фильма
--  4. максимальное значение платежа за аренду фильма





--ЗАДАНИЕ №5
--Используя данные из таблицы городов, составьте все возможные пары городов так, чтобы 
--в результате не было пар с одинаковыми названиями городов. Решение должно быть через Декартово произведение.
 




--ЗАДАНИЕ №6
--Используя данные из таблицы rental о дате выдачи фильма в аренду (поле rental_date) и 
--дате возврата (поле return_date), вычислите для каждого покупателя среднее количество 
--дней, за которые он возвращает фильмы. В результате должны быть дробные значения, а не интервал.
 




--======== ДОПОЛНИТЕЛЬНАЯ ЧАСТЬ ==============

--ЗАДАНИЕ №1
--Посчитайте для каждого фильма сколько раз его брали в аренду и значение общей стоимости аренды фильма за всё время.





--ЗАДАНИЕ №2
--Доработайте запрос из предыдущего задания и выведите с помощью него фильмы, которые отсутствуют на dvd дисках.





--ЗАДАНИЕ №3
--Посчитайте количество продаж, выполненных каждым продавцом. Добавьте вычисляемую колонку "Премия".
--Если количество продаж превышает 7300, то значение в колонке будет "Да", иначе должно быть значение "Нет".







